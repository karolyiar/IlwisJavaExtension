/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.5
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

   //#include <cmath>


#define SWIGJAVA


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif



/* Fix for jlong on some versions of gcc on Windows */
#if defined(__GNUC__) && !defined(__INTEL_COMPILER)
  typedef long long __int64;
#endif

/* Fix for jlong on 64-bit x86 Solaris */
#if defined(__x86_64)
# ifdef _LP64
#   undef _LP64
# endif
#endif

#include <jni.h>
#include <stdlib.h>
#include <string.h>


/* Support for throwing Java exceptions */
typedef enum {
  SWIG_JavaOutOfMemoryError = 1, 
  SWIG_JavaIOException, 
  SWIG_JavaRuntimeException, 
  SWIG_JavaIndexOutOfBoundsException,
  SWIG_JavaArithmeticException,
  SWIG_JavaIllegalArgumentException,
  SWIG_JavaNullPointerException,
  SWIG_JavaDirectorPureVirtual,
  SWIG_JavaUnknownError
} SWIG_JavaExceptionCodes;

typedef struct {
  SWIG_JavaExceptionCodes code;
  const char *java_exception;
} SWIG_JavaExceptions_t;


static void SWIGUNUSED SWIG_JavaThrowException(JNIEnv *jenv, SWIG_JavaExceptionCodes code, const char *msg) {
  jclass excep;
  static const SWIG_JavaExceptions_t java_exceptions[] = {
    { SWIG_JavaOutOfMemoryError, "java/lang/OutOfMemoryError" },
    { SWIG_JavaIOException, "java/io/IOException" },
    { SWIG_JavaRuntimeException, "java/lang/RuntimeException" },
    { SWIG_JavaIndexOutOfBoundsException, "java/lang/IndexOutOfBoundsException" },
    { SWIG_JavaArithmeticException, "java/lang/ArithmeticException" },
    { SWIG_JavaIllegalArgumentException, "java/lang/IllegalArgumentException" },
    { SWIG_JavaNullPointerException, "java/lang/NullPointerException" },
    { SWIG_JavaDirectorPureVirtual, "java/lang/RuntimeException" },
    { SWIG_JavaUnknownError,  "java/lang/UnknownError" },
    { (SWIG_JavaExceptionCodes)0,  "java/lang/UnknownError" }
  };
  const SWIG_JavaExceptions_t *except_ptr = java_exceptions;

  while (except_ptr->code != code && except_ptr->code)
    except_ptr++;

  jenv->ExceptionClear();
  excep = jenv->FindClass(except_ptr->java_exception);
  if (excep)
    jenv->ThrowNew(excep, msg);
}


/* Contract support */

#define SWIG_contract_assert(nullreturn, expr, msg) if (!(expr)) {SWIG_JavaThrowException(jenv, SWIG_JavaIllegalArgumentException, msg); return nullreturn; } else

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1
#define  SWIG_IOError        	   -2
#define  SWIG_RuntimeError   	   -3
#define  SWIG_IndexError     	   -4
#define  SWIG_TypeError      	   -5
#define  SWIG_DivisionByZero 	   -6
#define  SWIG_OverflowError  	   -7
#define  SWIG_SyntaxError    	   -8
#define  SWIG_ValueError     	   -9
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12
#define  SWIG_NullReferenceError   -13




SWIGINTERN void SWIG_JavaException(JNIEnv *jenv, int code, const char *msg) {
  SWIG_JavaExceptionCodes exception_code = SWIG_JavaUnknownError;
  switch(code) {
  case SWIG_MemoryError:
    exception_code = SWIG_JavaOutOfMemoryError;
    break;
  case SWIG_IOError:
    exception_code = SWIG_JavaIOException;
    break;
  case SWIG_SystemError:
  case SWIG_RuntimeError:
    exception_code = SWIG_JavaRuntimeException;
    break;
  case SWIG_OverflowError:
  case SWIG_IndexError:
    exception_code = SWIG_JavaIndexOutOfBoundsException;
    break;
  case SWIG_DivisionByZero:
    exception_code = SWIG_JavaArithmeticException;
    break;
  case SWIG_SyntaxError:
  case SWIG_ValueError:
  case SWIG_TypeError:
    exception_code = SWIG_JavaIllegalArgumentException;
    break;
  case SWIG_UnknownError:
  default:
    exception_code = SWIG_JavaUnknownError;
    break;
  }
  SWIG_JavaThrowException(jenv, exception_code, msg);
}


#include <stdexcept>


#include <string>


#include "kernel.h"
#include "ilwisdata.h"
#include "../../IlwisCore/core/util/range.h"
#include "itemrange.h"

//#include "javaapi_pyobject.h"
#include "javaapi_error.h"
#include "javaapi_extension.h"
#include "javaapi_object.h"
//#include "javaapi_engine.h"
#include "javaapi_ilwisobject.h"
//#include "javaapi_coordinatesystem.h"
//#include "javaapi_table.h"
//#include "javaapi_coverage.h"
#include "javaapi_util.h"
//#include "javaapi_geometry.h"
//#include "javaapi_feature.h"
//#include "javaapi_featureiterator.h"
//#include "javaapi_featurecoverage.h"
//#include "javaapi_pixeliterator.h"
//#include "javaapi_georeference.h"
//#include "javaapi_rastercoverage.h"
//#include "javaapi_range.h"
//#include "javaapi_catalog.h"
//#include "javaapi_domain.h"
//#include "javaapi_datadefinition.h"
//#include "javaapi_columndefinition.h"
//#include "javaapi_domainitem.h"
//#include "javaapi_rangeiterator.h"
//#include "javaapi_vertexiterator.h"


#ifdef __cplusplus
extern "C" {
#endif

SWIGEXPORT jboolean JNICALL Java_ilwisobject_1test_ilwisobjectsJNI__1initIlwisObjects(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jboolean jresult = 0 ;
  char *arg1 = (char *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  {
    try {
      result = (bool)javaapi::_initIlwisObjects((char const *)arg1);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jboolean)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT void JNICALL Java_ilwisobject_1test_ilwisobjectsJNI__1exitIlwisObjects(JNIEnv *jenv, jclass jcls) {
  (void)jenv;
  (void)jcls;
  {
    try {
      javaapi::_exitIlwisObjects();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
}


SWIGEXPORT void JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_disconnectIssueLogger(JNIEnv *jenv, jclass jcls) {
  (void)jenv;
  (void)jcls;
  {
    try {
      javaapi::disconnectIssueLogger();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
}


SWIGEXPORT void JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_connectIssueLogger(JNIEnv *jenv, jclass jcls) {
  (void)jenv;
  (void)jcls;
  {
    try {
      javaapi::connectIssueLogger();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
}


SWIGEXPORT jint JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_it_1FEATURE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  javaapi::it::ilwisType result;
  
  (void)jenv;
  (void)jcls;
  result = (javaapi::it::ilwisType)javaapi::it::FEATURE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_it_1RASTER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  javaapi::it::ilwisType result;
  
  (void)jenv;
  (void)jcls;
  result = (javaapi::it::ilwisType)javaapi::it::RASTER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_it_1COVERAGE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  javaapi::it::ilwisType result;
  
  (void)jenv;
  (void)jcls;
  result = (javaapi::it::ilwisType)javaapi::it::COVERAGE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_it_1TABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  javaapi::it::ilwisType result;
  
  (void)jenv;
  (void)jcls;
  result = (javaapi::it::ilwisType)javaapi::it::TABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_it_1GEOREF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  javaapi::it::ilwisType result;
  
  (void)jenv;
  (void)jcls;
  result = (javaapi::it::ilwisType)javaapi::it::GEOREF;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_it_1COORDSYSTEM_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  javaapi::it::ilwisType result;
  
  (void)jenv;
  (void)jcls;
  result = (javaapi::it::ilwisType)javaapi::it::COORDSYSTEM;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_it_1DOMAIN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  javaapi::it::ilwisType result;
  
  (void)jenv;
  (void)jcls;
  result = (javaapi::it::ilwisType)javaapi::it::DOMAIN;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_it_1NUMERICDOMAIN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  javaapi::it::ilwisType result;
  
  (void)jenv;
  (void)jcls;
  result = (javaapi::it::ilwisType)javaapi::it::NUMERICDOMAIN;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_it_1ITEMDOMAIN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  javaapi::it::ilwisType result;
  
  (void)jenv;
  (void)jcls;
  result = (javaapi::it::ilwisType)javaapi::it::ITEMDOMAIN;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_it_1OPERATIONMETADATA_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  javaapi::it::ilwisType result;
  
  (void)jenv;
  (void)jcls;
  result = (javaapi::it::ilwisType)javaapi::it::OPERATIONMETADATA;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_it_1PROJECTION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  javaapi::it::ilwisType result;
  
  (void)jenv;
  (void)jcls;
  result = (javaapi::it::ilwisType)javaapi::it::PROJECTION;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_it_1ELLIPSOID_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  javaapi::it::ilwisType result;
  
  (void)jenv;
  (void)jcls;
  result = (javaapi::it::ilwisType)javaapi::it::ELLIPSOID;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_it_1CATALOG_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  javaapi::it::ilwisType result;
  
  (void)jenv;
  (void)jcls;
  result = (javaapi::it::ilwisType)javaapi::it::CATALOG;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_it_1CONTINUOUSCOLOR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  javaapi::it::ilwisType result;
  
  (void)jenv;
  (void)jcls;
  result = (javaapi::it::ilwisType)javaapi::it::CONTINUOUSCOLOR;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_it_1PALETTECOLOR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  javaapi::it::ilwisType result;
  
  (void)jenv;
  (void)jcls;
  result = (javaapi::it::ilwisType)javaapi::it::PALETTECOLOR;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_it_1VALUERANGE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  javaapi::it::ilwisType result;
  
  (void)jenv;
  (void)jcls;
  result = (javaapi::it::ilwisType)javaapi::it::VALUERANGE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_new_1it(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  javaapi::it *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (javaapi::it *)new javaapi::it();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::it **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_delete_1it(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  javaapi::it *arg1 = (javaapi::it *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(javaapi::it **)&jarg1; 
  {
    try {
      delete arg1;
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
}


SWIGEXPORT void JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_delete_1Object(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  javaapi::Object *arg1 = (javaapi::Object *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(javaapi::Object **)&jarg1; 
  {
    try {
      delete arg1;
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Object_1_1_1bool_1_1(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  javaapi::Object *arg1 = (javaapi::Object *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::Object **)&jarg1; 
  {
    try {
      result = (bool)((javaapi::Object const *)arg1)->__bool__();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Object_1_1_1str_1_1(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  javaapi::Object *arg1 = (javaapi::Object *) 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::Object **)&jarg1; 
  {
    try {
      result = (arg1)->__str__();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jobject JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Object_1ilwisType(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jobject jresult = 0 ;
  javaapi::Object *arg1 = (javaapi::Object *) 0 ;
  IlwisTypes result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::Object **)&jarg1; 
  {
    try {
      result = (IlwisTypes)(arg1)->ilwisType();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  {
    jbyteArray ba = jenv->NewByteArray(9);
    jbyte* bae = jenv->GetByteArrayElements(ba, 0);
    jclass clazz = jenv->FindClass("java/math/BigInteger");
    jmethodID mid = jenv->GetMethodID(clazz, "<init>", "([B)V");
    jobject bigint;
    int i;
    
    bae[0] = 0;
    for(i=1; i<9; i++ ) {
      bae[i] = (jbyte)(result>>8*(8-i));
    }
    
    jenv->ReleaseByteArrayElements(ba, bae, 0);
    bigint = jenv->NewObject(clazz, mid, ba);
    jresult = bigint;
  }
  return jresult;
}


SWIGEXPORT jint JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_IlwisObject_1cmINPUT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  javaapi::IlwisObject::ConnectorMode result;
  
  (void)jenv;
  (void)jcls;
  result = (javaapi::IlwisObject::ConnectorMode)javaapi::IlwisObject::cmINPUT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_IlwisObject_1cmOUTPUT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  javaapi::IlwisObject::ConnectorMode result;
  
  (void)jenv;
  (void)jcls;
  result = (javaapi::IlwisObject::ConnectorMode)javaapi::IlwisObject::cmOUTPUT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_IlwisObject_1cmEXTENDED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  javaapi::IlwisObject::ConnectorMode result;
  
  (void)jenv;
  (void)jcls;
  result = (javaapi::IlwisObject::ConnectorMode)javaapi::IlwisObject::cmEXTENDED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_IlwisObject_1smMETADATA_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  javaapi::IlwisObject::StoreMode result;
  
  (void)jenv;
  (void)jcls;
  result = (javaapi::IlwisObject::StoreMode)javaapi::IlwisObject::smMETADATA;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_IlwisObject_1smBINARYDATA_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  javaapi::IlwisObject::StoreMode result;
  
  (void)jenv;
  (void)jcls;
  result = (javaapi::IlwisObject::StoreMode)javaapi::IlwisObject::smBINARYDATA;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_delete_1IlwisObject(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  javaapi::IlwisObject *arg1 = (javaapi::IlwisObject *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(javaapi::IlwisObject **)&jarg1; 
  {
    try {
      delete arg1;
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
}


SWIGEXPORT void JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_IlwisObject_1open_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jstring jarg3, jstring jarg4, jlong jarg5, jobject jarg5_) {
  javaapi::IlwisObject *arg1 = (javaapi::IlwisObject *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  javaapi::IOOptions *arg5 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg5_;
  arg1 = *(javaapi::IlwisObject **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return ;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  arg5 = *(javaapi::IOOptions **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::IOOptions const & reference is null");
    return ;
  } 
  {
    try {
      (arg1)->open((std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(javaapi::IOOptions const &)*arg5);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
}


SWIGEXPORT void JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_IlwisObject_1open_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jstring jarg3, jstring jarg4) {
  javaapi::IlwisObject *arg1 = (javaapi::IlwisObject *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::IlwisObject **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return ;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  {
    try {
      (arg1)->open((std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
}


SWIGEXPORT void JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_IlwisObject_1open_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jstring jarg3) {
  javaapi::IlwisObject *arg1 = (javaapi::IlwisObject *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::IlwisObject **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      (arg1)->open((std::string const &)*arg2,(std::string const &)*arg3);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
}


SWIGEXPORT void JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_IlwisObject_1open_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  javaapi::IlwisObject *arg1 = (javaapi::IlwisObject *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::IlwisObject **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      (arg1)->open((std::string const &)*arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
}


SWIGEXPORT void JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_IlwisObject_1store_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jstring jarg3, jstring jarg4, jlong jarg5, jobject jarg5_) {
  javaapi::IlwisObject *arg1 = (javaapi::IlwisObject *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  javaapi::IOOptions *arg5 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg5_;
  arg1 = *(javaapi::IlwisObject **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return ;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  arg5 = *(javaapi::IOOptions **)&jarg5;
  if (!arg5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::IOOptions const & reference is null");
    return ;
  } 
  {
    try {
      (arg1)->store((std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4,(javaapi::IOOptions const &)*arg5);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
}


SWIGEXPORT void JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_IlwisObject_1store_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jstring jarg3, jstring jarg4) {
  javaapi::IlwisObject *arg1 = (javaapi::IlwisObject *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::IlwisObject **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  if(!jarg4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg4_pstr = (const char *)jenv->GetStringUTFChars(jarg4, 0); 
  if (!arg4_pstr) return ;
  std::string arg4_str(arg4_pstr);
  arg4 = &arg4_str;
  jenv->ReleaseStringUTFChars(jarg4, arg4_pstr); 
  {
    try {
      (arg1)->store((std::string const &)*arg2,(std::string const &)*arg3,(std::string const &)*arg4);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
}


SWIGEXPORT void JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_IlwisObject_1store_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jstring jarg3) {
  javaapi::IlwisObject *arg1 = (javaapi::IlwisObject *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::IlwisObject **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return ;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      (arg1)->store((std::string const &)*arg2,(std::string const &)*arg3);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
}


SWIGEXPORT void JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_IlwisObject_1store_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  javaapi::IlwisObject *arg1 = (javaapi::IlwisObject *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::IlwisObject **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      (arg1)->store((std::string const &)*arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_IlwisObject_1_1_1bool_1_1(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  javaapi::IlwisObject *arg1 = (javaapi::IlwisObject *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::IlwisObject **)&jarg1; 
  {
    try {
      result = (bool)((javaapi::IlwisObject const *)arg1)->__bool__();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_IlwisObject_1_1_1str_1_1(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  javaapi::IlwisObject *arg1 = (javaapi::IlwisObject *) 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::IlwisObject **)&jarg1; 
  {
    try {
      result = (arg1)->__str__();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_IlwisObject_1_1_1add_1_1(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jstring jresult = 0 ;
  javaapi::IlwisObject *arg1 = (javaapi::IlwisObject *) 0 ;
  std::string arg2 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::IlwisObject **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = (arg1)->__add__(arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_IlwisObject_1_1_1radd_1_1(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jstring jresult = 0 ;
  javaapi::IlwisObject *arg1 = (javaapi::IlwisObject *) 0 ;
  std::string arg2 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::IlwisObject **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = (arg1)->__radd__(arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_IlwisObject_1name_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  javaapi::IlwisObject *arg1 = (javaapi::IlwisObject *) 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::IlwisObject **)&jarg1; 
  {
    try {
      result = (arg1)->name();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_IlwisObject_1name_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  javaapi::IlwisObject *arg1 = (javaapi::IlwisObject *) 0 ;
  std::string arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::IlwisObject **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      (arg1)->name(arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_IlwisObject_1isInternal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  javaapi::IlwisObject *arg1 = (javaapi::IlwisObject *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::IlwisObject **)&jarg1; 
  {
    try {
      result = (bool)((javaapi::IlwisObject const *)arg1)->isInternal();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_IlwisObject_1type(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  javaapi::IlwisObject *arg1 = (javaapi::IlwisObject *) 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::IlwisObject **)&jarg1; 
  {
    try {
      result = (arg1)->type();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_IlwisObject_1type2Name(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
  jstring jresult = 0 ;
  javaapi::IlwisObject *arg1 = (javaapi::IlwisObject *) 0 ;
  IlwisTypes arg2 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::IlwisObject **)&jarg1; 
  {
    jclass clazz;
    jmethodID mid;
    jbyteArray ba;
    jbyte* bae;
    jsize sz;
    int i;
    
    if (!jarg2) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "BigInteger null");
      return 0;
    }
    clazz = jenv->GetObjectClass(jarg2);
    mid = jenv->GetMethodID(clazz, "toByteArray", "()[B");
    ba = (jbyteArray)jenv->CallObjectMethod(jarg2, mid);
    bae = jenv->GetByteArrayElements(ba, 0);
    sz = jenv->GetArrayLength(ba);
    arg2 = 0;
    for(i=0; i<sz; i++) {
      arg2 = (arg2 << 8) | (IlwisTypes)(unsigned char)bae[i];
    }
    jenv->ReleaseByteArrayElements(ba, bae, 0);
  }
  {
    try {
      result = (arg1)->type2Name(arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jobject JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_IlwisObject_1ilwisID(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jobject jresult = 0 ;
  javaapi::IlwisObject *arg1 = (javaapi::IlwisObject *) 0 ;
  quint64 result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::IlwisObject **)&jarg1; 
  {
    try {
      result = (quint64)((javaapi::IlwisObject const *)arg1)->ilwisID();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  {
    jbyteArray ba = jenv->NewByteArray(9);
    jbyte* bae = jenv->GetByteArrayElements(ba, 0);
    jclass clazz = jenv->FindClass("java/math/BigInteger");
    jmethodID mid = jenv->GetMethodID(clazz, "<init>", "([B)V");
    jobject bigint;
    int i;
    
    bae[0] = 0;
    for(i=1; i<9; i++ ) {
      bae[i] = (jbyte)(result>>8*(8-i));
    }
    
    jenv->ReleaseByteArrayElements(ba, bae, 0);
    bigint = jenv->NewObject(clazz, mid, ba);
    jresult = bigint;
  }
  return jresult;
}


SWIGEXPORT jobject JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_IlwisObject_1ilwisType(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jobject jresult = 0 ;
  javaapi::IlwisObject *arg1 = (javaapi::IlwisObject *) 0 ;
  IlwisTypes result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::IlwisObject **)&jarg1; 
  {
    try {
      result = (IlwisTypes)(arg1)->ilwisType();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  {
    jbyteArray ba = jenv->NewByteArray(9);
    jbyte* bae = jenv->GetByteArrayElements(ba, 0);
    jclass clazz = jenv->FindClass("java/math/BigInteger");
    jmethodID mid = jenv->GetMethodID(clazz, "<init>", "([B)V");
    jobject bigint;
    int i;
    
    bae[0] = 0;
    for(i=1; i<9; i++ ) {
      bae[i] = (jbyte)(result>>8*(8-i));
    }
    
    jenv->ReleaseByteArrayElements(ba, bae, 0);
    bigint = jenv->NewObject(clazz, mid, ba);
    jresult = bigint;
  }
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_new_1Coordinate_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jlong jresult = 0 ;
  double arg1 ;
  double arg2 ;
  javaapi::Coordinate *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  {
    try {
      result = (javaapi::Coordinate *)new javaapi::Coordinate(arg1,arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::Coordinate **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_new_1Coordinate_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3) {
  jlong jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  javaapi::Coordinate *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      result = (javaapi::Coordinate *)new javaapi::Coordinate(arg1,arg2,arg3);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::Coordinate **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_new_1Coordinate_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  javaapi::Coordinate *arg1 = 0 ;
  javaapi::Coordinate *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::Coordinate **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::Coordinate const & reference is null");
    return 0;
  } 
  {
    try {
      result = (javaapi::Coordinate *)new javaapi::Coordinate((javaapi::Coordinate const &)*arg1);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::Coordinate **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Coordinate_1x(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  javaapi::Coordinate *arg1 = (javaapi::Coordinate *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::Coordinate **)&jarg1; 
  {
    try {
      result = (double)((javaapi::Coordinate const *)arg1)->x();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Coordinate_1y(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  javaapi::Coordinate *arg1 = (javaapi::Coordinate *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::Coordinate **)&jarg1; 
  {
    try {
      result = (double)((javaapi::Coordinate const *)arg1)->y();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Coordinate_1z(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  javaapi::Coordinate *arg1 = (javaapi::Coordinate *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::Coordinate **)&jarg1; 
  {
    try {
      result = (double)((javaapi::Coordinate const *)arg1)->z();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Coordinate_1setX(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  javaapi::Coordinate *arg1 = (javaapi::Coordinate *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::Coordinate **)&jarg1; 
  arg2 = (double)jarg2; 
  {
    try {
      (arg1)->setX(arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
}


SWIGEXPORT void JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Coordinate_1setY(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  javaapi::Coordinate *arg1 = (javaapi::Coordinate *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::Coordinate **)&jarg1; 
  arg2 = (double)jarg2; 
  {
    try {
      (arg1)->setY(arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
}


SWIGEXPORT void JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Coordinate_1setZ(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  javaapi::Coordinate *arg1 = (javaapi::Coordinate *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::Coordinate **)&jarg1; 
  arg2 = (double)jarg2; 
  {
    try {
      (arg1)->setZ(arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Coordinate_1is3D(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  javaapi::Coordinate *arg1 = (javaapi::Coordinate *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::Coordinate **)&jarg1; 
  {
    try {
      result = (bool)((javaapi::Coordinate const *)arg1)->is3D();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Coordinate_1multiply(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  jlong jresult = 0 ;
  javaapi::Coordinate *arg1 = (javaapi::Coordinate *) 0 ;
  double arg2 ;
  javaapi::Coordinate *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::Coordinate **)&jarg1; 
  arg2 = (double)jarg2; 
  {
    try {
      result = (javaapi::Coordinate *)(arg1)->operator *=(arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::Coordinate **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Coordinate_1_1_1itruediv_1_1(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  jlong jresult = 0 ;
  javaapi::Coordinate *arg1 = (javaapi::Coordinate *) 0 ;
  double arg2 ;
  javaapi::Coordinate *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::Coordinate **)&jarg1; 
  arg2 = (double)jarg2; 
  {
    try {
      result = (javaapi::Coordinate *)(arg1)->__itruediv__(arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::Coordinate **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Coordinate_1equal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  javaapi::Coordinate *arg1 = (javaapi::Coordinate *) 0 ;
  javaapi::Coordinate *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(javaapi::Coordinate **)&jarg1; 
  arg2 = *(javaapi::Coordinate **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::Coordinate const & reference is null");
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->operator ==((javaapi::Coordinate const &)*arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Coordinate_1notequal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  javaapi::Coordinate *arg1 = (javaapi::Coordinate *) 0 ;
  javaapi::Coordinate *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(javaapi::Coordinate **)&jarg1; 
  arg2 = *(javaapi::Coordinate **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::Coordinate const & reference is null");
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->operator !=((javaapi::Coordinate const &)*arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Coordinate_1toString(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  javaapi::Coordinate *arg1 = (javaapi::Coordinate *) 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::Coordinate **)&jarg1; 
  {
    try {
      result = (arg1)->__str__();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Coordinate_1isValid(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  javaapi::Coordinate *arg1 = (javaapi::Coordinate *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::Coordinate **)&jarg1; 
  {
    try {
      result = (bool)((javaapi::Coordinate const *)arg1)->__bool__();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_delete_1Coordinate(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  javaapi::Coordinate *arg1 = (javaapi::Coordinate *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(javaapi::Coordinate **)&jarg1; 
  {
    try {
      delete arg1;
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_new_1IOOptions_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  javaapi::IOOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (javaapi::IOOptions *)new javaapi::IOOptions();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::IOOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_new_1IOOptions_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  QVariant *arg2 = (QVariant *) 0 ;
  javaapi::IOOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(QVariant **)&jarg2; 
  {
    try {
      result = (javaapi::IOOptions *)new javaapi::IOOptions((std::string const &)*arg1,arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::IOOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_IOOptions_1contains(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jboolean jresult = 0 ;
  javaapi::IOOptions *arg1 = (javaapi::IOOptions *) 0 ;
  std::string *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::IOOptions **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = (bool)(arg1)->contains((std::string const &)*arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_IOOptions_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  javaapi::IOOptions *arg1 = (javaapi::IOOptions *) 0 ;
  quint32 result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::IOOptions **)&jarg1; 
  {
    try {
      result = (quint32)(arg1)->size();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_IOOptions_1_1_1getitem_1_1(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jlong jresult = 0 ;
  javaapi::IOOptions *arg1 = (javaapi::IOOptions *) 0 ;
  std::string *arg2 = 0 ;
  QVariant result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::IOOptions **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = (arg1)->__getitem__((std::string const &)*arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(QVariant **)&jresult = new QVariant((const QVariant &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_IOOptions_1addOption(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  javaapi::IOOptions *arg1 = (javaapi::IOOptions *) 0 ;
  std::string *arg2 = 0 ;
  QVariant *arg3 = (QVariant *) 0 ;
  javaapi::IOOptions *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::IOOptions **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  arg3 = *(QVariant **)&jarg3; 
  {
    try {
      result = (javaapi::IOOptions *) &(arg1)->addOption((std::string const &)*arg2,arg3);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::IOOptions **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_delete_1IOOptions(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  javaapi::IOOptions *arg1 = (javaapi::IOOptions *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(javaapi::IOOptions **)&jarg1; 
  {
    try {
      delete arg1;
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_new_1ColorModel(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  javaapi::ColorModelNS *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (javaapi::ColorModelNS *)new javaapi::ColorModelNS();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::ColorModelNS **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_delete_1ColorModel(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  javaapi::ColorModelNS *arg1 = (javaapi::ColorModelNS *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(javaapi::ColorModelNS **)&jarg1; 
  {
    try {
      delete arg1;
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_new_1Color_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  javaapi::Color *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (javaapi::Color *)new javaapi::Color();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::Color **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_new_1Color_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jint jarg1, jlong jarg2, jstring jarg3) {
  jlong jresult = 0 ;
  javaapi::ColorModel arg1 ;
  QVariant *arg2 = (QVariant *) 0 ;
  std::string *arg3 = 0 ;
  javaapi::Color *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (javaapi::ColorModel)jarg1; 
  arg2 = *(QVariant **)&jarg2; 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      result = (javaapi::Color *)new javaapi::Color(arg1,arg2,(std::string const &)*arg3);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::Color **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_new_1Color_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jint jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  javaapi::ColorModel arg1 ;
  QVariant *arg2 = (QVariant *) 0 ;
  javaapi::Color *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (javaapi::ColorModel)jarg1; 
  arg2 = *(QVariant **)&jarg2; 
  {
    try {
      result = (javaapi::Color *)new javaapi::Color(arg1,arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::Color **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_new_1Color_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jstring jarg3) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  QVariant *arg2 = (QVariant *) 0 ;
  std::string *arg3 = 0 ;
  javaapi::Color *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(QVariant **)&jarg2; 
  if(!jarg3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg3_pstr = (const char *)jenv->GetStringUTFChars(jarg3, 0); 
  if (!arg3_pstr) return 0;
  std::string arg3_str(arg3_pstr);
  arg3 = &arg3_str;
  jenv->ReleaseStringUTFChars(jarg3, arg3_pstr); 
  {
    try {
      result = (javaapi::Color *)new javaapi::Color((std::string const &)*arg1,arg2,(std::string const &)*arg3);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::Color **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_new_1Color_1_1SWIG_14(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  QVariant *arg2 = (QVariant *) 0 ;
  javaapi::Color *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  arg2 = *(QVariant **)&jarg2; 
  {
    try {
      result = (javaapi::Color *)new javaapi::Color((std::string const &)*arg1,arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::Color **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Color_1getItem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jdouble jresult = 0 ;
  javaapi::Color *arg1 = (javaapi::Color *) 0 ;
  std::string arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::Color **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  } 
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return 0;
  (&arg2)->assign(arg2_pstr);
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      result = (double)((javaapi::Color const *)arg1)->getItem(arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Color_1setName(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  javaapi::Color *arg1 = (javaapi::Color *) 0 ;
  std::string *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::Color **)&jarg1; 
  if(!jarg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return ;
  }
  const char *arg2_pstr = (const char *)jenv->GetStringUTFChars(jarg2, 0); 
  if (!arg2_pstr) return ;
  std::string arg2_str(arg2_pstr);
  arg2 = &arg2_str;
  jenv->ReleaseStringUTFChars(jarg2, arg2_pstr); 
  {
    try {
      (arg1)->setName((std::string const &)*arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
}


SWIGEXPORT jstring JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Color_1getName(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  javaapi::Color *arg1 = (javaapi::Color *) 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::Color **)&jarg1; 
  {
    try {
      result = (arg1)->getName();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Color_1getColorModel(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  javaapi::Color *arg1 = (javaapi::Color *) 0 ;
  javaapi::ColorModel result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::Color **)&jarg1; 
  {
    try {
      result = (javaapi::ColorModel)((javaapi::Color const *)arg1)->getColorModel();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Color_1toString(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  javaapi::Color *arg1 = (javaapi::Color *) 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::Color **)&jarg1; 
  {
    try {
      result = ((javaapi::Color const *)arg1)->toString();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_delete_1Color(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  javaapi::Color *arg1 = (javaapi::Color *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(javaapi::Color **)&jarg1; 
  {
    try {
      delete arg1;
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_new_1Pixel_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  javaapi::PixelTemplate< qint32 > *arg1 = 0 ;
  javaapi::PixelTemplate< qint32 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::PixelTemplate< qint32 > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::PixelTemplate< qint32 > const & reference is null");
    return 0;
  } 
  {
    try {
      result = (javaapi::PixelTemplate< qint32 > *)new javaapi::PixelTemplate< qint32 >((javaapi::PixelTemplate< qint32 > const &)*arg1);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::PixelTemplate< qint32 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_new_1Pixel_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  javaapi::PixelTemplate< double > *arg1 = 0 ;
  javaapi::PixelTemplate< qint32 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::PixelTemplate< double > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::PixelTemplate< double > const & reference is null");
    return 0;
  } 
  {
    try {
      result = (javaapi::PixelTemplate< qint32 > *)new javaapi::PixelTemplate< qint32 >((javaapi::PixelTemplate< double > const &)*arg1);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::PixelTemplate< qint32 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_new_1Pixel_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2) {
  jlong jresult = 0 ;
  int arg1 ;
  int arg2 ;
  javaapi::PixelTemplate< qint32 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      result = (javaapi::PixelTemplate< qint32 > *)new javaapi::PixelTemplate< qint32 >(arg1,arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::PixelTemplate< qint32 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_new_1Pixel_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2, jint jarg3) {
  jlong jresult = 0 ;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  javaapi::PixelTemplate< qint32 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (int)jarg3; 
  {
    try {
      result = (javaapi::PixelTemplate< qint32 > *)new javaapi::PixelTemplate< qint32 >(arg1,arg2,arg3);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::PixelTemplate< qint32 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Pixel_1x(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  javaapi::PixelTemplate< qint32 > *arg1 = (javaapi::PixelTemplate< qint32 > *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::PixelTemplate< qint32 > **)&jarg1; 
  {
    try {
      result = (int)((javaapi::PixelTemplate< qint32 > const *)arg1)->x();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Pixel_1y(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  javaapi::PixelTemplate< qint32 > *arg1 = (javaapi::PixelTemplate< qint32 > *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::PixelTemplate< qint32 > **)&jarg1; 
  {
    try {
      result = (int)((javaapi::PixelTemplate< qint32 > const *)arg1)->y();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Pixel_1z(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  javaapi::PixelTemplate< qint32 > *arg1 = (javaapi::PixelTemplate< qint32 > *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::PixelTemplate< qint32 > **)&jarg1; 
  {
    try {
      result = (int)((javaapi::PixelTemplate< qint32 > const *)arg1)->z();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Pixel_1setX(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  javaapi::PixelTemplate< qint32 > *arg1 = (javaapi::PixelTemplate< qint32 > *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::PixelTemplate< qint32 > **)&jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      (arg1)->setX(arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
}


SWIGEXPORT void JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Pixel_1setY(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  javaapi::PixelTemplate< qint32 > *arg1 = (javaapi::PixelTemplate< qint32 > *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::PixelTemplate< qint32 > **)&jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      (arg1)->setY(arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
}


SWIGEXPORT void JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Pixel_1setZ(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  javaapi::PixelTemplate< qint32 > *arg1 = (javaapi::PixelTemplate< qint32 > *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::PixelTemplate< qint32 > **)&jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      (arg1)->setZ(arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Pixel_1is3D(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  javaapi::PixelTemplate< qint32 > *arg1 = (javaapi::PixelTemplate< qint32 > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::PixelTemplate< qint32 > **)&jarg1; 
  {
    try {
      result = (bool)((javaapi::PixelTemplate< qint32 > const *)arg1)->is3D();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Pixel_1multiply(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  javaapi::PixelTemplate< qint32 > *arg1 = (javaapi::PixelTemplate< qint32 > *) 0 ;
  int arg2 ;
  javaapi::PixelTemplate< int > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::PixelTemplate< qint32 > **)&jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      result = (javaapi::PixelTemplate< int > *)(arg1)->operator *=(arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::PixelTemplate< int > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Pixel_1_1_1itruediv_1_1(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  javaapi::PixelTemplate< qint32 > *arg1 = (javaapi::PixelTemplate< qint32 > *) 0 ;
  int arg2 ;
  javaapi::PixelTemplate< int > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::PixelTemplate< qint32 > **)&jarg1; 
  arg2 = (int)jarg2; 
  {
    try {
      result = (javaapi::PixelTemplate< int > *)(arg1)->__itruediv__(arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::PixelTemplate< int > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Pixel_1equal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  javaapi::PixelTemplate< qint32 > *arg1 = (javaapi::PixelTemplate< qint32 > *) 0 ;
  javaapi::PixelTemplate< int > *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(javaapi::PixelTemplate< qint32 > **)&jarg1; 
  arg2 = *(javaapi::PixelTemplate< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::PixelTemplate< int > const & reference is null");
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->operator ==((javaapi::PixelTemplate< int > const &)*arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Pixel_1notequal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  javaapi::PixelTemplate< qint32 > *arg1 = (javaapi::PixelTemplate< qint32 > *) 0 ;
  javaapi::PixelTemplate< int > *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(javaapi::PixelTemplate< qint32 > **)&jarg1; 
  arg2 = *(javaapi::PixelTemplate< int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::PixelTemplate< int > const & reference is null");
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->operator !=((javaapi::PixelTemplate< int > const &)*arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Pixel_1toString(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  javaapi::PixelTemplate< qint32 > *arg1 = (javaapi::PixelTemplate< qint32 > *) 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::PixelTemplate< qint32 > **)&jarg1; 
  {
    try {
      result = (arg1)->__str__();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Pixel_1isValid(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  javaapi::PixelTemplate< qint32 > *arg1 = (javaapi::PixelTemplate< qint32 > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::PixelTemplate< qint32 > **)&jarg1; 
  {
    try {
      result = (bool)((javaapi::PixelTemplate< qint32 > const *)arg1)->__bool__();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_delete_1Pixel(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  javaapi::PixelTemplate< qint32 > *arg1 = (javaapi::PixelTemplate< qint32 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(javaapi::PixelTemplate< qint32 > **)&jarg1; 
  {
    try {
      delete arg1;
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_new_1PixelD_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  javaapi::PixelTemplate< qint32 > *arg1 = 0 ;
  javaapi::PixelTemplate< double > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::PixelTemplate< qint32 > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::PixelTemplate< qint32 > const & reference is null");
    return 0;
  } 
  {
    try {
      result = (javaapi::PixelTemplate< double > *)new javaapi::PixelTemplate< double >((javaapi::PixelTemplate< qint32 > const &)*arg1);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::PixelTemplate< double > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_new_1PixelD_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  javaapi::PixelTemplate< double > *arg1 = 0 ;
  javaapi::PixelTemplate< double > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::PixelTemplate< double > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::PixelTemplate< double > const & reference is null");
    return 0;
  } 
  {
    try {
      result = (javaapi::PixelTemplate< double > *)new javaapi::PixelTemplate< double >((javaapi::PixelTemplate< double > const &)*arg1);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::PixelTemplate< double > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_new_1PixelD_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jlong jresult = 0 ;
  double arg1 ;
  double arg2 ;
  javaapi::PixelTemplate< double > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  {
    try {
      result = (javaapi::PixelTemplate< double > *)new javaapi::PixelTemplate< double >(arg1,arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::PixelTemplate< double > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_new_1PixelD_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3) {
  jlong jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  javaapi::PixelTemplate< double > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      result = (javaapi::PixelTemplate< double > *)new javaapi::PixelTemplate< double >(arg1,arg2,arg3);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::PixelTemplate< double > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_PixelD_1x(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  javaapi::PixelTemplate< double > *arg1 = (javaapi::PixelTemplate< double > *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::PixelTemplate< double > **)&jarg1; 
  {
    try {
      result = (double)((javaapi::PixelTemplate< double > const *)arg1)->x();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_PixelD_1y(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  javaapi::PixelTemplate< double > *arg1 = (javaapi::PixelTemplate< double > *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::PixelTemplate< double > **)&jarg1; 
  {
    try {
      result = (double)((javaapi::PixelTemplate< double > const *)arg1)->y();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_PixelD_1z(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  javaapi::PixelTemplate< double > *arg1 = (javaapi::PixelTemplate< double > *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::PixelTemplate< double > **)&jarg1; 
  {
    try {
      result = (double)((javaapi::PixelTemplate< double > const *)arg1)->z();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_PixelD_1setX(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  javaapi::PixelTemplate< double > *arg1 = (javaapi::PixelTemplate< double > *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::PixelTemplate< double > **)&jarg1; 
  arg2 = (double)jarg2; 
  {
    try {
      (arg1)->setX(arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
}


SWIGEXPORT void JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_PixelD_1setY(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  javaapi::PixelTemplate< double > *arg1 = (javaapi::PixelTemplate< double > *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::PixelTemplate< double > **)&jarg1; 
  arg2 = (double)jarg2; 
  {
    try {
      (arg1)->setY(arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
}


SWIGEXPORT void JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_PixelD_1setZ(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  javaapi::PixelTemplate< double > *arg1 = (javaapi::PixelTemplate< double > *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::PixelTemplate< double > **)&jarg1; 
  arg2 = (double)jarg2; 
  {
    try {
      (arg1)->setZ(arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
}


SWIGEXPORT jboolean JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_PixelD_1is3D(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  javaapi::PixelTemplate< double > *arg1 = (javaapi::PixelTemplate< double > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::PixelTemplate< double > **)&jarg1; 
  {
    try {
      result = (bool)((javaapi::PixelTemplate< double > const *)arg1)->is3D();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_PixelD_1multiply(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  jlong jresult = 0 ;
  javaapi::PixelTemplate< double > *arg1 = (javaapi::PixelTemplate< double > *) 0 ;
  double arg2 ;
  javaapi::PixelTemplate< double > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::PixelTemplate< double > **)&jarg1; 
  arg2 = (double)jarg2; 
  {
    try {
      result = (javaapi::PixelTemplate< double > *)(arg1)->operator *=(arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::PixelTemplate< double > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_PixelD_1_1_1itruediv_1_1(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  jlong jresult = 0 ;
  javaapi::PixelTemplate< double > *arg1 = (javaapi::PixelTemplate< double > *) 0 ;
  double arg2 ;
  javaapi::PixelTemplate< double > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::PixelTemplate< double > **)&jarg1; 
  arg2 = (double)jarg2; 
  {
    try {
      result = (javaapi::PixelTemplate< double > *)(arg1)->__itruediv__(arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::PixelTemplate< double > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_PixelD_1equal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  javaapi::PixelTemplate< double > *arg1 = (javaapi::PixelTemplate< double > *) 0 ;
  javaapi::PixelTemplate< double > *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(javaapi::PixelTemplate< double > **)&jarg1; 
  arg2 = *(javaapi::PixelTemplate< double > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::PixelTemplate< double > const & reference is null");
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->operator ==((javaapi::PixelTemplate< double > const &)*arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_PixelD_1notequal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  javaapi::PixelTemplate< double > *arg1 = (javaapi::PixelTemplate< double > *) 0 ;
  javaapi::PixelTemplate< double > *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(javaapi::PixelTemplate< double > **)&jarg1; 
  arg2 = *(javaapi::PixelTemplate< double > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::PixelTemplate< double > const & reference is null");
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->operator !=((javaapi::PixelTemplate< double > const &)*arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_PixelD_1toString(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  javaapi::PixelTemplate< double > *arg1 = (javaapi::PixelTemplate< double > *) 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::PixelTemplate< double > **)&jarg1; 
  {
    try {
      result = (arg1)->__str__();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_PixelD_1isValid(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  javaapi::PixelTemplate< double > *arg1 = (javaapi::PixelTemplate< double > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::PixelTemplate< double > **)&jarg1; 
  {
    try {
      result = (bool)((javaapi::PixelTemplate< double > const *)arg1)->__bool__();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_delete_1PixelD(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  javaapi::PixelTemplate< double > *arg1 = (javaapi::PixelTemplate< double > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(javaapi::PixelTemplate< double > **)&jarg1; 
  {
    try {
      delete arg1;
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_new_1Size_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  unsigned int arg1 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  javaapi::SizeTemplate< quint32 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (unsigned int)jarg1; 
  arg2 = (unsigned int)jarg2; 
  arg3 = (unsigned int)jarg3; 
  {
    try {
      result = (javaapi::SizeTemplate< quint32 > *)new javaapi::SizeTemplate< quint32 >(arg1,arg2,arg3);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::SizeTemplate< quint32 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_new_1Size_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  unsigned int arg1 ;
  unsigned int arg2 ;
  javaapi::SizeTemplate< quint32 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (unsigned int)jarg1; 
  arg2 = (unsigned int)jarg2; 
  {
    try {
      result = (javaapi::SizeTemplate< quint32 > *)new javaapi::SizeTemplate< quint32 >(arg1,arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::SizeTemplate< quint32 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_new_1Size_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  javaapi::SizeTemplate< quint32 > *arg1 = 0 ;
  javaapi::SizeTemplate< quint32 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::SizeTemplate< quint32 > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::SizeTemplate< quint32 > const & reference is null");
    return 0;
  } 
  {
    try {
      result = (javaapi::SizeTemplate< quint32 > *)new javaapi::SizeTemplate< quint32 >((javaapi::SizeTemplate< quint32 > const &)*arg1);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::SizeTemplate< quint32 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_new_1Size_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  javaapi::SizeTemplate< double > *arg1 = 0 ;
  javaapi::SizeTemplate< quint32 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::SizeTemplate< double > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::SizeTemplate< double > const & reference is null");
    return 0;
  } 
  {
    try {
      result = (javaapi::SizeTemplate< quint32 > *)new javaapi::SizeTemplate< quint32 >((javaapi::SizeTemplate< double > const &)*arg1);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::SizeTemplate< quint32 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Size_1xsize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  javaapi::SizeTemplate< quint32 > *arg1 = (javaapi::SizeTemplate< quint32 > *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::SizeTemplate< quint32 > **)&jarg1; 
  {
    try {
      result = (unsigned int)((javaapi::SizeTemplate< quint32 > const *)arg1)->xsize();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Size_1ysize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  javaapi::SizeTemplate< quint32 > *arg1 = (javaapi::SizeTemplate< quint32 > *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::SizeTemplate< quint32 > **)&jarg1; 
  {
    try {
      result = (unsigned int)((javaapi::SizeTemplate< quint32 > const *)arg1)->ysize();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Size_1zsize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  javaapi::SizeTemplate< quint32 > *arg1 = (javaapi::SizeTemplate< quint32 > *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::SizeTemplate< quint32 > **)&jarg1; 
  {
    try {
      result = (unsigned int)((javaapi::SizeTemplate< quint32 > const *)arg1)->zsize();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Size_1setXsize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  javaapi::SizeTemplate< quint32 > *arg1 = (javaapi::SizeTemplate< quint32 > *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::SizeTemplate< quint32 > **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  {
    try {
      (arg1)->setXsize(arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
}


SWIGEXPORT void JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Size_1setYsize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  javaapi::SizeTemplate< quint32 > *arg1 = (javaapi::SizeTemplate< quint32 > *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::SizeTemplate< quint32 > **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  {
    try {
      (arg1)->setYsize(arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
}


SWIGEXPORT void JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Size_1setZsize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  javaapi::SizeTemplate< quint32 > *arg1 = (javaapi::SizeTemplate< quint32 > *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::SizeTemplate< quint32 > **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  {
    try {
      (arg1)->setZsize(arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
}


SWIGEXPORT jobject JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Size_1linearSize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jobject jresult = 0 ;
  javaapi::SizeTemplate< quint32 > *arg1 = (javaapi::SizeTemplate< quint32 > *) 0 ;
  quint64 result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::SizeTemplate< quint32 > **)&jarg1; 
  {
    try {
      result = (quint64)((javaapi::SizeTemplate< quint32 > const *)arg1)->linearSize();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  {
    jbyteArray ba = jenv->NewByteArray(9);
    jbyte* bae = jenv->GetByteArrayElements(ba, 0);
    jclass clazz = jenv->FindClass("java/math/BigInteger");
    jmethodID mid = jenv->GetMethodID(clazz, "<init>", "([B)V");
    jobject bigint;
    int i;
    
    bae[0] = 0;
    for(i=1; i<9; i++ ) {
      bae[i] = (jbyte)(result>>8*(8-i));
    }
    
    jenv->ReleaseByteArrayElements(ba, bae, 0);
    bigint = jenv->NewObject(clazz, mid, ba);
    jresult = bigint;
  }
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Size_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  javaapi::SizeTemplate< quint32 > *arg1 = (javaapi::SizeTemplate< quint32 > *) 0 ;
  javaapi::SizeTemplate< unsigned int > *arg2 = 0 ;
  javaapi::SizeTemplate< unsigned int > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(javaapi::SizeTemplate< quint32 > **)&jarg1; 
  arg2 = *(javaapi::SizeTemplate< unsigned int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::SizeTemplate< unsigned int > const & reference is null");
    return 0;
  } 
  {
    try {
      result = (javaapi::SizeTemplate< unsigned int > *)(arg1)->operator +=((javaapi::SizeTemplate< unsigned int > const &)*arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::SizeTemplate< unsigned int > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Size_1subtract(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  javaapi::SizeTemplate< quint32 > *arg1 = (javaapi::SizeTemplate< quint32 > *) 0 ;
  javaapi::SizeTemplate< unsigned int > *arg2 = 0 ;
  javaapi::SizeTemplate< unsigned int > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(javaapi::SizeTemplate< quint32 > **)&jarg1; 
  arg2 = *(javaapi::SizeTemplate< unsigned int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::SizeTemplate< unsigned int > const & reference is null");
    return 0;
  } 
  {
    try {
      result = (javaapi::SizeTemplate< unsigned int > *)(arg1)->operator -=((javaapi::SizeTemplate< unsigned int > const &)*arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::SizeTemplate< unsigned int > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Size_1multiply(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  jlong jresult = 0 ;
  javaapi::SizeTemplate< quint32 > *arg1 = (javaapi::SizeTemplate< quint32 > *) 0 ;
  double arg2 ;
  javaapi::SizeTemplate< unsigned int > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::SizeTemplate< quint32 > **)&jarg1; 
  arg2 = (double)jarg2; 
  {
    try {
      result = (javaapi::SizeTemplate< unsigned int > *)(arg1)->operator *=(arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::SizeTemplate< unsigned int > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Size_1equal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  javaapi::SizeTemplate< quint32 > *arg1 = (javaapi::SizeTemplate< quint32 > *) 0 ;
  javaapi::SizeTemplate< unsigned int > *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(javaapi::SizeTemplate< quint32 > **)&jarg1; 
  arg2 = *(javaapi::SizeTemplate< unsigned int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::SizeTemplate< unsigned int > const & reference is null");
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->operator ==((javaapi::SizeTemplate< unsigned int > const &)*arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Size_1notequal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  javaapi::SizeTemplate< quint32 > *arg1 = (javaapi::SizeTemplate< quint32 > *) 0 ;
  javaapi::SizeTemplate< unsigned int > *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(javaapi::SizeTemplate< quint32 > **)&jarg1; 
  arg2 = *(javaapi::SizeTemplate< unsigned int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::SizeTemplate< unsigned int > const & reference is null");
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->operator !=((javaapi::SizeTemplate< unsigned int > const &)*arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Size_1_1_1contains_1_1_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  javaapi::SizeTemplate< quint32 > *arg1 = (javaapi::SizeTemplate< quint32 > *) 0 ;
  javaapi::Coordinate *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(javaapi::SizeTemplate< quint32 > **)&jarg1; 
  arg2 = *(javaapi::Coordinate **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::Coordinate const & reference is null");
    return 0;
  } 
  {
    try {
      result = (bool)((javaapi::SizeTemplate< quint32 > const *)arg1)->__contains__((javaapi::Coordinate const &)*arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Size_1_1_1contains_1_1_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  javaapi::SizeTemplate< quint32 > *arg1 = (javaapi::SizeTemplate< quint32 > *) 0 ;
  javaapi::PixelTemplate< qint32 > *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(javaapi::SizeTemplate< quint32 > **)&jarg1; 
  arg2 = *(javaapi::PixelTemplate< qint32 > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::PixelTemplate< qint32 > const & reference is null");
    return 0;
  } 
  {
    try {
      result = (bool)((javaapi::SizeTemplate< quint32 > const *)arg1)->__contains__((javaapi::PixelTemplate< qint32 > const &)*arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Size_1_1_1contains_1_1_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  javaapi::SizeTemplate< quint32 > *arg1 = (javaapi::SizeTemplate< quint32 > *) 0 ;
  javaapi::PixelTemplate< double > *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(javaapi::SizeTemplate< quint32 > **)&jarg1; 
  arg2 = *(javaapi::PixelTemplate< double > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::PixelTemplate< double > const & reference is null");
    return 0;
  } 
  {
    try {
      result = (bool)((javaapi::SizeTemplate< quint32 > const *)arg1)->__contains__((javaapi::PixelTemplate< double > const &)*arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Size_1toString(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  javaapi::SizeTemplate< quint32 > *arg1 = (javaapi::SizeTemplate< quint32 > *) 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::SizeTemplate< quint32 > **)&jarg1; 
  {
    try {
      result = (arg1)->__str__();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Size_1isValid(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  javaapi::SizeTemplate< quint32 > *arg1 = (javaapi::SizeTemplate< quint32 > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::SizeTemplate< quint32 > **)&jarg1; 
  {
    try {
      result = (bool)((javaapi::SizeTemplate< quint32 > const *)arg1)->__bool__();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_delete_1Size(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  javaapi::SizeTemplate< quint32 > *arg1 = (javaapi::SizeTemplate< quint32 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(javaapi::SizeTemplate< quint32 > **)&jarg1; 
  {
    try {
      delete arg1;
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_new_1SizeD_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3) {
  jlong jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  javaapi::SizeTemplate< double > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  {
    try {
      result = (javaapi::SizeTemplate< double > *)new javaapi::SizeTemplate< double >(arg1,arg2,arg3);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::SizeTemplate< double > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_new_1SizeD_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jlong jresult = 0 ;
  double arg1 ;
  double arg2 ;
  javaapi::SizeTemplate< double > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  {
    try {
      result = (javaapi::SizeTemplate< double > *)new javaapi::SizeTemplate< double >(arg1,arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::SizeTemplate< double > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_new_1SizeD_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  javaapi::SizeTemplate< quint32 > *arg1 = 0 ;
  javaapi::SizeTemplate< double > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::SizeTemplate< quint32 > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::SizeTemplate< quint32 > const & reference is null");
    return 0;
  } 
  {
    try {
      result = (javaapi::SizeTemplate< double > *)new javaapi::SizeTemplate< double >((javaapi::SizeTemplate< quint32 > const &)*arg1);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::SizeTemplate< double > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_new_1SizeD_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  javaapi::SizeTemplate< double > *arg1 = 0 ;
  javaapi::SizeTemplate< double > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::SizeTemplate< double > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::SizeTemplate< double > const & reference is null");
    return 0;
  } 
  {
    try {
      result = (javaapi::SizeTemplate< double > *)new javaapi::SizeTemplate< double >((javaapi::SizeTemplate< double > const &)*arg1);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::SizeTemplate< double > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_SizeD_1xsize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  javaapi::SizeTemplate< double > *arg1 = (javaapi::SizeTemplate< double > *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::SizeTemplate< double > **)&jarg1; 
  {
    try {
      result = (double)((javaapi::SizeTemplate< double > const *)arg1)->xsize();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_SizeD_1ysize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  javaapi::SizeTemplate< double > *arg1 = (javaapi::SizeTemplate< double > *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::SizeTemplate< double > **)&jarg1; 
  {
    try {
      result = (double)((javaapi::SizeTemplate< double > const *)arg1)->ysize();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_SizeD_1zsize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  javaapi::SizeTemplate< double > *arg1 = (javaapi::SizeTemplate< double > *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::SizeTemplate< double > **)&jarg1; 
  {
    try {
      result = (double)((javaapi::SizeTemplate< double > const *)arg1)->zsize();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_SizeD_1setXsize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  javaapi::SizeTemplate< double > *arg1 = (javaapi::SizeTemplate< double > *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::SizeTemplate< double > **)&jarg1; 
  arg2 = (double)jarg2; 
  {
    try {
      (arg1)->setXsize(arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
}


SWIGEXPORT void JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_SizeD_1setYsize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  javaapi::SizeTemplate< double > *arg1 = (javaapi::SizeTemplate< double > *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::SizeTemplate< double > **)&jarg1; 
  arg2 = (double)jarg2; 
  {
    try {
      (arg1)->setYsize(arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
}


SWIGEXPORT void JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_SizeD_1setZsize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  javaapi::SizeTemplate< double > *arg1 = (javaapi::SizeTemplate< double > *) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::SizeTemplate< double > **)&jarg1; 
  arg2 = (double)jarg2; 
  {
    try {
      (arg1)->setZsize(arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
}


SWIGEXPORT jobject JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_SizeD_1linearSize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jobject jresult = 0 ;
  javaapi::SizeTemplate< double > *arg1 = (javaapi::SizeTemplate< double > *) 0 ;
  quint64 result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::SizeTemplate< double > **)&jarg1; 
  {
    try {
      result = (quint64)((javaapi::SizeTemplate< double > const *)arg1)->linearSize();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  {
    jbyteArray ba = jenv->NewByteArray(9);
    jbyte* bae = jenv->GetByteArrayElements(ba, 0);
    jclass clazz = jenv->FindClass("java/math/BigInteger");
    jmethodID mid = jenv->GetMethodID(clazz, "<init>", "([B)V");
    jobject bigint;
    int i;
    
    bae[0] = 0;
    for(i=1; i<9; i++ ) {
      bae[i] = (jbyte)(result>>8*(8-i));
    }
    
    jenv->ReleaseByteArrayElements(ba, bae, 0);
    bigint = jenv->NewObject(clazz, mid, ba);
    jresult = bigint;
  }
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_SizeD_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  javaapi::SizeTemplate< double > *arg1 = (javaapi::SizeTemplate< double > *) 0 ;
  javaapi::SizeTemplate< double > *arg2 = 0 ;
  javaapi::SizeTemplate< double > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(javaapi::SizeTemplate< double > **)&jarg1; 
  arg2 = *(javaapi::SizeTemplate< double > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::SizeTemplate< double > const & reference is null");
    return 0;
  } 
  {
    try {
      result = (javaapi::SizeTemplate< double > *)(arg1)->operator +=((javaapi::SizeTemplate< double > const &)*arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::SizeTemplate< double > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_SizeD_1subtract(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  javaapi::SizeTemplate< double > *arg1 = (javaapi::SizeTemplate< double > *) 0 ;
  javaapi::SizeTemplate< double > *arg2 = 0 ;
  javaapi::SizeTemplate< double > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(javaapi::SizeTemplate< double > **)&jarg1; 
  arg2 = *(javaapi::SizeTemplate< double > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::SizeTemplate< double > const & reference is null");
    return 0;
  } 
  {
    try {
      result = (javaapi::SizeTemplate< double > *)(arg1)->operator -=((javaapi::SizeTemplate< double > const &)*arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::SizeTemplate< double > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_SizeD_1multiply(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  jlong jresult = 0 ;
  javaapi::SizeTemplate< double > *arg1 = (javaapi::SizeTemplate< double > *) 0 ;
  double arg2 ;
  javaapi::SizeTemplate< double > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::SizeTemplate< double > **)&jarg1; 
  arg2 = (double)jarg2; 
  {
    try {
      result = (javaapi::SizeTemplate< double > *)(arg1)->operator *=(arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::SizeTemplate< double > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_SizeD_1equal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  javaapi::SizeTemplate< double > *arg1 = (javaapi::SizeTemplate< double > *) 0 ;
  javaapi::SizeTemplate< double > *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(javaapi::SizeTemplate< double > **)&jarg1; 
  arg2 = *(javaapi::SizeTemplate< double > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::SizeTemplate< double > const & reference is null");
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->operator ==((javaapi::SizeTemplate< double > const &)*arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_SizeD_1notequal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  javaapi::SizeTemplate< double > *arg1 = (javaapi::SizeTemplate< double > *) 0 ;
  javaapi::SizeTemplate< double > *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(javaapi::SizeTemplate< double > **)&jarg1; 
  arg2 = *(javaapi::SizeTemplate< double > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::SizeTemplate< double > const & reference is null");
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->operator !=((javaapi::SizeTemplate< double > const &)*arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_SizeD_1_1_1contains_1_1_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  javaapi::SizeTemplate< double > *arg1 = (javaapi::SizeTemplate< double > *) 0 ;
  javaapi::Coordinate *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(javaapi::SizeTemplate< double > **)&jarg1; 
  arg2 = *(javaapi::Coordinate **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::Coordinate const & reference is null");
    return 0;
  } 
  {
    try {
      result = (bool)((javaapi::SizeTemplate< double > const *)arg1)->__contains__((javaapi::Coordinate const &)*arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_SizeD_1_1_1contains_1_1_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  javaapi::SizeTemplate< double > *arg1 = (javaapi::SizeTemplate< double > *) 0 ;
  javaapi::PixelTemplate< qint32 > *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(javaapi::SizeTemplate< double > **)&jarg1; 
  arg2 = *(javaapi::PixelTemplate< qint32 > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::PixelTemplate< qint32 > const & reference is null");
    return 0;
  } 
  {
    try {
      result = (bool)((javaapi::SizeTemplate< double > const *)arg1)->__contains__((javaapi::PixelTemplate< qint32 > const &)*arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_SizeD_1_1_1contains_1_1_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  javaapi::SizeTemplate< double > *arg1 = (javaapi::SizeTemplate< double > *) 0 ;
  javaapi::PixelTemplate< double > *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(javaapi::SizeTemplate< double > **)&jarg1; 
  arg2 = *(javaapi::PixelTemplate< double > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::PixelTemplate< double > const & reference is null");
    return 0;
  } 
  {
    try {
      result = (bool)((javaapi::SizeTemplate< double > const *)arg1)->__contains__((javaapi::PixelTemplate< double > const &)*arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_SizeD_1toString(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  javaapi::SizeTemplate< double > *arg1 = (javaapi::SizeTemplate< double > *) 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::SizeTemplate< double > **)&jarg1; 
  {
    try {
      result = (arg1)->__str__();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_SizeD_1isValid(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  javaapi::SizeTemplate< double > *arg1 = (javaapi::SizeTemplate< double > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::SizeTemplate< double > **)&jarg1; 
  {
    try {
      result = (bool)((javaapi::SizeTemplate< double > const *)arg1)->__bool__();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_delete_1SizeD(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  javaapi::SizeTemplate< double > *arg1 = (javaapi::SizeTemplate< double > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(javaapi::SizeTemplate< double > **)&jarg1; 
  {
    try {
      delete arg1;
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_new_1Box_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > *)new javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 >();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_new_1Box_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > *)new javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 >((std::string const &)*arg1);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_new_1Box_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  javaapi::PixelTemplate< qint32 > *arg1 = 0 ;
  javaapi::PixelTemplate< qint32 > *arg2 = 0 ;
  javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(javaapi::PixelTemplate< qint32 > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::PixelTemplate< qint32 > const & reference is null");
    return 0;
  } 
  arg2 = *(javaapi::PixelTemplate< qint32 > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::PixelTemplate< qint32 > const & reference is null");
    return 0;
  } 
  {
    try {
      result = (javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > *)new javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 >((javaapi::PixelTemplate< qint32 > const &)*arg1,(javaapi::PixelTemplate< qint32 > const &)*arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_new_1Box_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  javaapi::SizeTemplate< unsigned int > *arg1 = 0 ;
  javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::SizeTemplate< unsigned int > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::SizeTemplate< unsigned int > const & reference is null");
    return 0;
  } 
  {
    try {
      result = (javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > *)new javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 >((javaapi::SizeTemplate< unsigned int > const &)*arg1);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Box_1minCorner(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > *arg1 = (javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > *) 0 ;
  SwigValueWrapper< javaapi::PixelTemplate< int > > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > **)&jarg1; 
  {
    try {
      result = (arg1)->minCorner();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::PixelTemplate< qint32 > **)&jresult = new javaapi::PixelTemplate< qint32 >((const javaapi::PixelTemplate< qint32 > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Box_1maxCorner(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > *arg1 = (javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > *) 0 ;
  SwigValueWrapper< javaapi::PixelTemplate< int > > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > **)&jarg1; 
  {
    try {
      result = (arg1)->maxCorner();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::PixelTemplate< qint32 > **)&jresult = new javaapi::PixelTemplate< qint32 >((const javaapi::PixelTemplate< qint32 > &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Box_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > *arg1 = (javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > *) 0 ;
  SwigValueWrapper< javaapi::SizeTemplate< unsigned int > > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > **)&jarg1; 
  {
    try {
      result = (arg1)->size();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::SizeTemplate< unsigned int > **)&jresult = new javaapi::SizeTemplate< unsigned int >((const javaapi::SizeTemplate< unsigned int > &)result); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Box_1is3D(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > *arg1 = (javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > **)&jarg1; 
  {
    try {
      result = (bool)((javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > const *)arg1)->is3D();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Box_1_1_1contains_1_1_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > *arg1 = (javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > *) 0 ;
  javaapi::PixelTemplate< qint32 > *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > **)&jarg1; 
  arg2 = *(javaapi::PixelTemplate< qint32 > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::PixelTemplate< qint32 > const & reference is null");
    return 0;
  } 
  {
    try {
      result = (bool)((javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > const *)arg1)->__contains__((javaapi::PixelTemplate< qint32 > const &)*arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Box_1_1_1contains_1_1_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > *arg1 = (javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > *) 0 ;
  javaapi::BoxTemplate< Ilwis::Location< int,false >,javaapi::PixelTemplate< qint32 >,unsigned int > *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > **)&jarg1; 
  arg2 = *(javaapi::BoxTemplate< Ilwis::Location< int,false >,javaapi::PixelTemplate< qint32 >,unsigned int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::BoxTemplate< Ilwis::Location< int,false >,javaapi::PixelTemplate< qint32 >,unsigned int > const & reference is null");
    return 0;
  } 
  {
    try {
      result = (bool)((javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > const *)arg1)->__contains__((javaapi::BoxTemplate< Ilwis::Location< int,false >,javaapi::PixelTemplate< qint32 >,unsigned int > const &)*arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Box_1equal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > *arg1 = (javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > *) 0 ;
  javaapi::BoxTemplate< Ilwis::Location< int,false >,javaapi::PixelTemplate< qint32 >,unsigned int > *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > **)&jarg1; 
  arg2 = *(javaapi::BoxTemplate< Ilwis::Location< int,false >,javaapi::PixelTemplate< qint32 >,unsigned int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::BoxTemplate< Ilwis::Location< int,false >,javaapi::PixelTemplate< qint32 >,unsigned int > const & reference is null");
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->operator ==((javaapi::BoxTemplate< Ilwis::Location< int,false >,javaapi::PixelTemplate< qint32 >,unsigned int > const &)*arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Box_1notequal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > *arg1 = (javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > *) 0 ;
  javaapi::BoxTemplate< Ilwis::Location< int,false >,javaapi::PixelTemplate< qint32 >,unsigned int > *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > **)&jarg1; 
  arg2 = *(javaapi::BoxTemplate< Ilwis::Location< int,false >,javaapi::PixelTemplate< qint32 >,unsigned int > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::BoxTemplate< Ilwis::Location< int,false >,javaapi::PixelTemplate< qint32 >,unsigned int > const & reference is null");
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->operator !=((javaapi::BoxTemplate< Ilwis::Location< int,false >,javaapi::PixelTemplate< qint32 >,unsigned int > const &)*arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Box_1toString(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > *arg1 = (javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > *) 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > **)&jarg1; 
  {
    try {
      result = (arg1)->__str__();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Box_1isValid(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > *arg1 = (javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > **)&jarg1; 
  {
    try {
      result = (bool)((javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > const *)arg1)->__bool__();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_delete_1Box(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > *arg1 = (javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(javaapi::BoxTemplate< Ilwis::Location< qint32,false >,javaapi::PixelTemplate< qint32 >,quint32 > **)&jarg1; 
  {
    try {
      delete arg1;
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_new_1Envelope_1_1SWIG_10(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  {
    try {
      result = (javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > *)new javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double >();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_new_1Envelope_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  std::string *arg1 = 0 ;
  javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  if(!jarg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "null string");
    return 0;
  }
  const char *arg1_pstr = (const char *)jenv->GetStringUTFChars(jarg1, 0); 
  if (!arg1_pstr) return 0;
  std::string arg1_str(arg1_pstr);
  arg1 = &arg1_str;
  jenv->ReleaseStringUTFChars(jarg1, arg1_pstr); 
  {
    try {
      result = (javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > *)new javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double >((std::string const &)*arg1);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_new_1Envelope_1_1SWIG_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  javaapi::Coordinate *arg1 = 0 ;
  javaapi::Coordinate *arg2 = 0 ;
  javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(javaapi::Coordinate **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::Coordinate const & reference is null");
    return 0;
  } 
  arg2 = *(javaapi::Coordinate **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::Coordinate const & reference is null");
    return 0;
  } 
  {
    try {
      result = (javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > *)new javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double >((javaapi::Coordinate const &)*arg1,(javaapi::Coordinate const &)*arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_new_1Envelope_1_1SWIG_13(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  javaapi::SizeTemplate< double > *arg1 = 0 ;
  javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::SizeTemplate< double > **)&jarg1;
  if (!arg1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::SizeTemplate< double > const & reference is null");
    return 0;
  } 
  {
    try {
      result = (javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > *)new javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double >((javaapi::SizeTemplate< double > const &)*arg1);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Envelope_1minCorner(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > *arg1 = (javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > *) 0 ;
  SwigValueWrapper< javaapi::Coordinate > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > **)&jarg1; 
  {
    try {
      result = (arg1)->minCorner();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::Coordinate **)&jresult = new javaapi::Coordinate((const javaapi::Coordinate &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Envelope_1maxCorner(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > *arg1 = (javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > *) 0 ;
  SwigValueWrapper< javaapi::Coordinate > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > **)&jarg1; 
  {
    try {
      result = (arg1)->maxCorner();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::Coordinate **)&jresult = new javaapi::Coordinate((const javaapi::Coordinate &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Envelope_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > *arg1 = (javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > *) 0 ;
  SwigValueWrapper< javaapi::SizeTemplate< double > > result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > **)&jarg1; 
  {
    try {
      result = (arg1)->size();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  *(javaapi::SizeTemplate< double > **)&jresult = new javaapi::SizeTemplate< double >((const javaapi::SizeTemplate< double > &)result); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Envelope_1is3D(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > *arg1 = (javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > **)&jarg1; 
  {
    try {
      result = (bool)((javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > const *)arg1)->is3D();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Envelope_1_1_1contains_1_1_1_1SWIG_10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > *arg1 = (javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > *) 0 ;
  javaapi::Coordinate *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > **)&jarg1; 
  arg2 = *(javaapi::Coordinate **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::Coordinate const & reference is null");
    return 0;
  } 
  {
    try {
      result = (bool)((javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > const *)arg1)->__contains__((javaapi::Coordinate const &)*arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Envelope_1_1_1contains_1_1_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > *arg1 = (javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > *) 0 ;
  javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > **)&jarg1; 
  arg2 = *(javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > const & reference is null");
    return 0;
  } 
  {
    try {
      result = (bool)((javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > const *)arg1)->__contains__((javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > const &)*arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Envelope_1equal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > *arg1 = (javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > *) 0 ;
  javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > **)&jarg1; 
  arg2 = *(javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > const & reference is null");
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->operator ==((javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > const &)*arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Envelope_1notequal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jboolean jresult = 0 ;
  javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > *arg1 = (javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > *) 0 ;
  javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > *arg2 = 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > **)&jarg1; 
  arg2 = *(javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > **)&jarg2;
  if (!arg2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > const & reference is null");
    return 0;
  } 
  {
    try {
      result = (bool)(arg1)->operator !=((javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > const &)*arg2);
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Envelope_1toString(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > *arg1 = (javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > *) 0 ;
  std::string result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > **)&jarg1; 
  {
    try {
      result = (arg1)->__str__();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = jenv->NewStringUTF((&result)->c_str()); 
  return jresult;
}


SWIGEXPORT jboolean JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_Envelope_1isValid(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jboolean jresult = 0 ;
  javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > *arg1 = (javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > *) 0 ;
  bool result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > **)&jarg1; 
  {
    try {
      result = (bool)((javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > const *)arg1)->__bool__();
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
  jresult = (jboolean)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_delete_1Envelope(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > *arg1 = (javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(javaapi::BoxTemplate< Ilwis::Coordinate,javaapi::Coordinate,double > **)&jarg1; 
  {
    try {
      delete arg1;
    }catch (std::exception& e) {
      //PyErr_SetString(javaapi::translate_Exception_type(e),javaapi::get_err_message(e));
      //SWIG_fail;
      // TODO: Exception handling
    }
  }
}


SWIGEXPORT jlong JNICALL Java_ilwisobject_1test_ilwisobjectsJNI_IlwisObject_1SWIGUpcast(JNIEnv *jenv, jclass jcls, jlong jarg1) {
    jlong baseptr = 0;
    (void)jenv;
    (void)jcls;
    *(javaapi::Object **)&baseptr = *(javaapi::IlwisObject **)&jarg1;
    return baseptr;
}

#ifdef __cplusplus
}
#endif

