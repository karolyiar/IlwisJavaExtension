/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.5
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package ilwisobject_test;

public class vectorvs {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected vectorvs(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(vectorvs obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        ilwisobjectsJNI.delete_vectorvs(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public vectorvs() {
    this(ilwisobjectsJNI.new_vectorvs__SWIG_0(), true);
  }

  public vectorvs(long n) {
    this(ilwisobjectsJNI.new_vectorvs__SWIG_1(n), true);
  }

  public long size() {
    return ilwisobjectsJNI.vectorvs_size(swigCPtr, this);
  }

  public long capacity() {
    return ilwisobjectsJNI.vectorvs_capacity(swigCPtr, this);
  }

  public void reserve(long n) {
    ilwisobjectsJNI.vectorvs_reserve(swigCPtr, this, n);
  }

  public boolean isEmpty() {
    return ilwisobjectsJNI.vectorvs_isEmpty(swigCPtr, this);
  }

  public void clear() {
    ilwisobjectsJNI.vectorvs_clear(swigCPtr, this);
  }

  public void add(vectors x) {
    ilwisobjectsJNI.vectorvs_add(swigCPtr, this, vectors.getCPtr(x), x);
  }

  public vectors get(int i) {
    return new vectors(ilwisobjectsJNI.vectorvs_get(swigCPtr, this, i), false);
  }

  public void set(int i, vectors val) {
    ilwisobjectsJNI.vectorvs_set(swigCPtr, this, i, vectors.getCPtr(val), val);
  }

}
